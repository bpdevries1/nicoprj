#!/usr/bin/env tclsh86

# make-staging-hosts.tcl

package require tdbc::sqlite3
package require Tclx
package require ndv

set log [::ndv::CLogger::new_logger [file tail [info script]] debug]

proc main {argv} {
  set root_folder [det_root_folder] ; # based on OS.
  # 6-5-2013 NdV niet met 2 processen tegelijk op 1 database!
  set db_name [file join $root_folder "aaa/akamai2.db"]
  log info "Opening database: $db_name"
  set conn [open_db $db_name]
  make_hosts $conn staging
}

proc make_hosts {conn tablename} {
  global argv0
  set f [open hosts w]
  puts $f "# hosts file generated by $argv0 at [clock format [clock seconds] -format "%Y-%m-%d %H:%M:%S"]"
  set query "select staging_ip, domain
             from $tablename
             where staging_ip <> '<none>'
             order by staging_ip, domain"
  set prev_staging_ip "<none>"
  set domains {}
  foreach row [db_query $conn $query] {
    dict_to_vars $row
    if {$staging_ip != $prev_staging_ip} {
      if {$prev_staging_ip != "<none>"} {
        puts $f [format "%-15s %s" $prev_staging_ip [join $domains " "]]
      } else {
        # none, first item 
      }
      set prev_staging_ip $staging_ip
      set domains {}
    }
    lappend domains $domain 
  }
  # handle last
  puts $f [format "%-15s %s" $prev_staging_ip [join $domains " "]]
  puts $f ""
  # @todo in comments hosts opnemen waarvan geen staging ip bepaald kon worden.             
  set query "select domain from $tablename where staging_ip = '<none>' order by domain"
  set f2 [open "donslookup.sh" w]
  foreach row [db_query $conn $query] {
    dict_to_vars $row
    puts $f "# No staging ip for: $domain"
    puts $f2 "nslookup $domain >> nslookup.out"
  }
  close $f2
  close $f
}

# c:/aaa on windows, ~/aaa on linux
proc det_root_folder {} {
  global tcl_platform
  if {$tcl_platform(platform) == "windows"} {
    return "c:/" 
  } else {
    return "~/" 
  }
}
  
main $argv


Logreader specifieke ahk procs:

read-ahklogs-db.tcl:
read_logfile_dir_ahk - enkele dir, met 1 db en 1 dir, wel meerdere logfiles. Deze lijkt algemeen, en je kunt in 1 run meerdere logs van verschillende types hebben, straks ook voor MCP test, is combi van ahk en vugen!
read_logfile_ahk - vrij standaard, omdat parsers/handlers hierbuiten gedef-d worden. Roept readlogfile_coro aan.
get_results_db_ahk - geen ssl dingen, roept define_tables_ahk aan.
define_tables_ahk - grotendeels hetzelfde als vugen versie, behalve ssl. Moet ook, want report werkt op beide versies. Evt bij de logfile opnemen welk type het is.




ahk_parsers_handlers.tcl:
define_logreader_handlers_ahk - specifiek
def_parsers_ahk - zeker specifiek
def_handlers_ahk - lijkt ook wel wat generieks in te zitten: je start iteraties, vervolgens trans start/stop/error en hierbinnen specifieke dingen als error lines, resource lines en nu ook extra param lines voor extra veld in trans-tabel. Ook user, bof en eof redelijk algemeen. Ook iets van context en specifiek. Context wordt opgeslagen in de handler, bij specifiek gaat er een item uit. Iets van ctx_start/end, of alleen start en geldig tot volgende. context kan een dict worden. Bij start wordt deze gemerged, bij end worden keys verwijderd?

def_handlers_ahk - voorlopig wel apart houden van de vugen versie. Integreren nu niet het belangrijkste. Maar dan dus verschillende namespaces!

  set proc_name [unique_name parse_$topic]
-> gaat om deze, en hierna om:
  proc $proc_name {line linenr} $body

je kunt ook in de naam bij unique_name nog een prefix gebruiken, soort poor man namespace dan.
Toch is een reset ook nog niet zo slecht. Dan wel voor elke read uitvoeren.
liblogreader wel in een namespace, hier zitten parsers en handlers als global object in.

perftools_dir global var zetten, zodat andere sources relatief tov deze geladen kunnen worden. Nu gedaan met relatieve paden als ../../ahk/ahklogreader.tcl, niet zo handig. Kan ook een env-var zijn, ook niet zo handig. Kan 'em ook opzoeken, meestal wel in het pad van de huidige, maar hoeft bij build tool bv niet, hoeft niet specifiek voor perf te zijn.
huidig       - ndv::source_once ../../loadrunner/vugentools/vuserlog/liblogreader.tcl
wil iets als -  ndv::source_once $perftools_dir/logdb/liblogreader.tcl
kan dan perftools_dir net hiervoor een waarde geven, vooralsnog hardcoded. Evt later betere oplossing verzinnen?


split_transname - ?toch ook anders in beide versies?

set_log_global - als log al gezet, dan niet opnieuw!

Je zou de ahk handler bijna een subtype van generieke log handler maken, een subclass dus. Maar deze zijn evil. Next best is dan reference vanuit ahk handler naar generieke handler. Of iets als:

proc get_ahk_db {
  set db [get_log_db <file>]
  
  # define extra stuff

  # prepare insert again? Evt dit pas doen eerste keer als insert wordt aangeroepen.

  return $db
}



proc en task namen:
verb
verb-noun
verb-noun-adjective



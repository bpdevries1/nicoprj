Bigfiles2db
===========
* With clojure 'script', including Async (if this adds anything).
* deze file voor logische/proces dingen, zie ook ..-technical.txt

Steps/todo
==========
* Gegevens nu in database, dan volgt (deels handmatige) analyse:
  - welke groepen te onderscheiden.
  - dingen als backups die weg kunnen: progs, oude data.
  - dingen in backups die eigenlijk in archief moeten.
  - zijn er dubbele dingen: zelfde filenaam, zelfde grootte, evt ook nog MD5.

Later/not
=========
* abstract away DB tasks, compare Tcl dbwrapper, possibly making it an object (use chart to see which kind we need to choose).
  - vraag of dit nodig is, nu eigenlijk met db-spec al voldoende.

Uitgangspunten/richtlijnen/'directions' guideline, directive, regulation, requirement
=====================================================================================
* 1 source en 1 backup lijken voldoende. Bij meerdere sources kiezen waar de echt source moet staan en de
  andere vervangen door een symlink naar deze enige echte source.
* Bij meer dan 1 backup: afhankelijk van de source, alleen backup van de enige echt source, en de andere dir dan
  niet backuppen? Want zou sneu als bij backup de dingen weer dubbel voorkomen. Dus als iets een symlink is, moet
  de backup dit ook zijn, mag best naar de originele enige echte source, hoeft niet naar backup-item.
* Wat wil je met grote project-files? Vooral logfiles, wireshark traces, DB's.  
* sort-of ironisch:
  - nu 1 backup dir van laptop die ik niet meer heb, dus eenmalig de data.
  - wil eigenlijk dat dit naar archief gaat, dan mogelijk hier wel ook backup van, dus data tweemalig dan. Daar ga je met je goed gedrag...
  -> ofwel keuze of het echt naar archief moet. En dan ook of het gebackupped moet worden.
  -> zwart-wit bekeken: of het is belangrijk, dan archief en ook backup. Of het is niet belangrijk, dan geen van beide.
  -> iets minder: 't is een soort cache van iets wat ook wel op internet te vinden is, maar dan wel vraag of dit altijd zo is.
  -> ook media files: wil ze in principe wel bewaren, ook al heb ik ze gezien, maar om er nou ook nog een backup van te maken...
* Dingen zoveel mogelijk automatisch. Anders blijf je aan de gang.
  
Extra velden
============
* MD5 - bij gelijke size (en ongelijke filename) meer zekerheid dat inhoud hetzelfde is.
  - vullen met clj code of door md5sum tool.
* source/backup
* functie: los van het type: hulp, media, werk-project-data: sort-of functioneel, functie-veld
* belang: groot (=backup nodig), medium (=backup afh van grootte), klein (=geen backup), niets (=verwijderen).
  - persoonlijke data (incl e-mail), project-docs, eigen sources zijn belangrijk.
  - bepaalde (niet open-source, gratis) software waar niet/moeilijk aan te komen is: mogelijk belangrijk, zelfs iets als Atlas routeplanner (in de tijd van google maps etc).
  - ook eigen foto's zijn belangrijk.
  - meeste media (zeker series en films) zijn medium, dus niet backuppen.
  - maar bepaalde boeken mss wel backup (lastiger aan te komen, wil/moet het nog lezen).
  - als dingen idd belangrijk zijn, is er dan wel een backup van?
  
Checken
=======
* Zitten er file-symlinks bij? Want deze zijn niet boeiend, dus deleten en zorgen dat ze niet opnieuw worden ingelezen.
* Kan zijn dat je dirs vindt die helemaal weg kunnen, dan wel alles doen, niet alleen dingen >10MB.
* En evt ook voor roman-boeken met zelfde inhoud, andere naam: maar dan wel vraag of het automatisch kan, anders weer te veel werk.

Done
====
* run only for specific dirs:
  /home - kijken of dit qua rechten goed gaat. Deze eerst, zou wat vlotter dan externe disks moeten gaan.
    - ging goed, geen rechten probleem, en best vlot ook.
  /media/nas - niet /media, want hier ook /media/home in, dan mss dubbel.
  - [2014-05-04 21:14:52] gestart even geleden, db inserts gaan vlot.
  - [2014-05-04 21:58:41] al weer een tijd klaar: duurde wel even, maar wel ok dus.
  /media/nico
  - [2014-05-04 21:59:08] gestart
  - [2014-05-04 22:48:08] al weer een tijdje klaar.



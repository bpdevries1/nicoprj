Web development with clojure

Notes
=====
* Bij JDBC/SQLite wordt java.jdbc v0.2.3 geinclude. Dit is al een wat oudere, met eigen project nu 0.3.0.
  Eerst even op deze laten staan, mss later aanpssen.
* Lijkt dat als je code aanpast in LT, je deze even moet selecteren en uitvoeren met ctrl-enter. Hierna
  in insta-repl use uitvoeren (mss niet eens nodig) en dan de call doen.
  - lijkt toch niet altijd nodig: dingen in home.clj aangepast en alleen save (ctrl-s) gedaan. Hierna werkte
    het in browser!
* Met LT kan niet alles, bv 'lein deps' wel vanaf cmdline doen. Hierna opnieuw connecten, fouten oplossen en
  (start-server) is genoeg. Door app opnieuw te definieren en hierna stop/start server gaat het ook wel eens
  goed. Dit scheelt hele reload, wat lang duurt.
    
Handige links
=============
* http://forums.pragprog.com/forums/308/topics/12552 - want problemen met starten REPL vanuit LightTable.

Issues en vragen
================
* Lighttable REPL geeft fout: lein clean op cmdline en nogeens in LightTable. blokjes blijven draaien, 
  waarsch teken dat REPL actief is. Andere opties is dependency versies wat aanpassen, want nu risico
  dat bij opnieuw via cmdline dingen uitvoeren het weer misgaat.
* pg 26: de POST naar / gaat niet goed, not found 404 error.
  - blijkt aan fout in code te liggen, foute volgorde van functies, een roept ander aan, ander was nog
    niet gedefinieerd. Met cmdline 'lein repl' kom je hierachter, in LightTable was dit dus lastiger.
* Voorlopig dus maar proberen in LT, en als het niet werkt, een 'lein compile' via cmdline.
* Instarepl tab krijgen: ctrl-space, repl, open-a-clojure-instarepl.
* Reload toch vaak nodig. Eerder iets als #'app gezien, dat het hiermee dynamischer wordt.
* Changes worden niet opgepakt:
  - kan scala aan dingen zijn, met lein repl proberen kan helpen, eerst compile ook, maar ook een touch
    van de file die je hebt aangepast, en dan weer een lein compile. Mss gewoon file aanpassen ook.
  - kan ook met browser te maken hebben! mss met de etag te maken? Lijkt ctrl-F5 te zijn.
  - deze ctrl-F5 helpt best wel: kleine code aanpassen, alleen ctrl-s, hierna ctrl-F5 en klaar!
  - een curl/wget had ook kunnen helpen. Of Opera? In opera werkt ctrl-r wel gewoon.
  - heeft ook met etag te maken: als je deze aanpast, werkt ctrl-r wel in firefox. Eigenlijk is firefox hier
    dus wat slimmer, mss even te slim ook.

Jar dependency errors
=====================
I solved it editing the project.clj. Replace

[compojure “1.1.6”]

with 

[compojure “1.1.6” :exclusions [org.clojure/tools.reader]]

and add to the :dependencies list

[org.clojure/tools.reader “0.7.10”]

The reason seems to be that LightTable expects this version of tools.reader, but Compojure brings in version 0.7.3 . You may see a project’s dependency tree running

lein deps tree

JavaScript doet het niet met liberator-service
==============================================
* home nu wel te zien, /users te doen, en /add-user deels ook.
* Maar het lijkt door de client JS niet aangeroepen te worden.
* Opties:
  - zelf debuggen, bv met console() regels.
  - project source code bekijken op https://github.com/yogthos/
* Wel uitgekomen:
  - met name de <script> tag niet afgesloten met '>', hierdoor ook unbalanced.
  - <ul> en <li> expliciet afsluiten met </ul>, dus niet <ul/> gebruiken.
  - errorhandler krijgt een xhr param.
  -> nog fout: melding blijft staan op lege post.
  
Database connecties
===================
* Nu nog db als map gedefinieerd, dus nog niet de connectie.
* Ergens ook @db gezien, klinkt beter.

Ideeen
======
* obv source-code een graphviz/dot met URL's, acties, redirects. Kan source lezen als text, maar omdat het
  een LISP is, natuurlijk beter als s-expression in te lezen en te bekijken. Eigenlijk is dit ook een
  soort callgraph.
  
  
Libraries used
==============
* Ring - the basics, webserver handling.
  - wrap-params (parsing params)
  - wrap-reload (for development)
  - wrap-resource and wrap-file-info (static files)
* Compojure - default routes/routing.
* lib-Noir - sessions, encrypt, andere middleware. Staat op website (webnoir.org) ook dat het gebouwd is op Ring/compojure.
  - http://clojurewebdev.com/workshop/slides/#sec-4-26 - route protection.
  
* Liberator - RESTful services.


Ook:
* Luminus - build on Noir (en dus ring/compojure).
* Pedestal - al eerder bekeken. Snap mss beter na dit boek.
* CHP - ook nieuw, nog niet eerder van gehoord.
* Hiccup - al eerder gebruikt.
* Garden - generating CSS.
* Javelin - FRP - wel leuk, maar volgens ? ook niet alles, en betere oplossing, zie instapaper (?).


